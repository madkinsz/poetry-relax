name: Build

env:
  POETRY_VERSION: "1.2.0"

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-latest
    outputs:
      build-version: ${{ steps.build.outputs.version }}

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up Poetry
        run: |
          pip install poetry==${{ env.POETRY_VERSION }}

      - name: Install local poetry-relax
        run: |
          poetry self add $(pwd)

      - name: Relax constraints
        run: |
          poetry relax

      - name: Build and publish package
        id: build
        env:
          POETRY_PYPI_TOKEN_TEST_PYPI: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          version=$(./bin/version dev)
          echo "::set-output name=version::$version"
          poetry version $version
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry publish --build -r test-pypi

  test-install:
    # We test the install on a clean machine to avoid poetry behavior attempting to
    # install the project root when it is checked out
    name: Test install
    runs-on: ubuntu-latest
    needs: build-and-publish

    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up Poetry
        run: |
          pip install poetry==${{ env.POETRY_VERSION }}
          poetry init --name 'test-project' --no-interaction
          poetry source add test-pypi https://test.pypi.org/simple/ --secondary

      - name: Wait for package to be available
        run: |
          sleep 15

      - name: Install poetry-relax ${{ needs.build-and-publish.outputs.build-version }}
        run: |
          version=${{ needs.build-and-publish.outputs.build-version }}
          poetry add --source test-pypi poetry-relax==$version -vvv
          installed=$(python -c "import pkg_resources; print(pkg_resources.get_distribution('poetry_relax').version)")
          test $installed = $version
